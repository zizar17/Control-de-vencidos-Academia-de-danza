package sistema;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.sql.PreparedStatement;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import static sistema.Pagos.fechavencimiento;

public class Vencidos extends javax.swing.JFrame {

    ConexionMysql con = new ConexionMysql();
    Connection cn = con.conectar();
    DefaultTableModel tablemodel;

    public Vencidos() {
        initComponents();
        this.setLocationRelativeTo(null);
        //Icono del JFrame
        setIconImage(new ImageIcon(getClass().getResource("/images/ballet.png")).getImage());
        mostrardatos();
        poputTable();
        fechapdf();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        containerbtnInicio = new javax.swing.JPanel();
        btnInicioClient = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDatosVencidos = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        btnPDF = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vencidos");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VENCIDOS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rockwell", 1, 18), new java.awt.Color(0, 0, 0))); // NOI18N

        containerbtnInicio.setBackground(new java.awt.Color(255, 255, 255));
        containerbtnInicio.setForeground(new java.awt.Color(255, 255, 255));

        btnInicioClient.setBackground(new java.awt.Color(255, 255, 255));
        btnInicioClient.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btnInicioClient.setForeground(new java.awt.Color(255, 255, 255));
        btnInicioClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flecha-atras (1).png"))); // NOI18N
        btnInicioClient.setContentAreaFilled(false);
        btnInicioClient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInicioClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout containerbtnInicioLayout = new javax.swing.GroupLayout(containerbtnInicio);
        containerbtnInicio.setLayout(containerbtnInicioLayout);
        containerbtnInicioLayout.setHorizontalGroup(
            containerbtnInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerbtnInicioLayout.createSequentialGroup()
                .addComponent(btnInicioClient)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        containerbtnInicioLayout.setVerticalGroup(
            containerbtnInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerbtnInicioLayout.createSequentialGroup()
                .addComponent(btnInicioClient)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Listado de vencidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI", 1, 14), new java.awt.Color(0, 0, 0))); // NOI18N

        jTableDatosVencidos = new javax.swing.JTable(){
            public boolean isCellEditable (int rowIndex,int colIndex){
                return false;
            }
        };
        jTableDatosVencidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableDatosVencidos.setFocusable(false);
        jTableDatosVencidos.getTableHeader().setResizingAllowed(false);
        jTableDatosVencidos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableDatosVencidos);

        txtBuscar.setBackground(new java.awt.Color(255, 255, 255));
        txtBuscar.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnPDF.setBackground(new java.awt.Color(255, 255, 255));
        btnPDF.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btnPDF.setForeground(new java.awt.Color(255, 255, 255));
        btnPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pdf (1) (1).png"))); // NOI18N
        btnPDF.setContentAreaFilled(false);
        btnPDF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Desarrolado por CM TECHNOLOGIES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnPDF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(209, 209, 209)
                        .addComponent(containerbtnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(containerbtnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPDF))
                        .addContainerGap())
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInicioClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioClientActionPerformed
    
        this.dispose();
    }//GEN-LAST:event_btnInicioClientActionPerformed

    public void poputTable() {
        JPopupMenu popupMenu = new JPopupMenu();
        JMenuItem menuPago = new JMenuItem("Realizar pago", new ImageIcon(getClass().getResource("/images/metodo-de-pago.png")));


        menuPago.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                int fila = jTableDatosVencidos.getSelectedRow();

                try {
 
                    String idCliente, nombre, fecha,monto;
                    

                    if (fila == -1) {
                        JOptionPane.showMessageDialog(null, "Debe Seleccionar una fila", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
                    } else {
                        tablemodel = (DefaultTableModel) jTableDatosVencidos.getModel();
                        idCliente = jTableDatosVencidos.getValueAt(fila, 0).toString();
                        nombre = jTableDatosVencidos.getValueAt(fila, 1).toString();
                        fecha = jTableDatosVencidos.getValueAt(fila, 5).toString();
                        monto=jTableDatosVencidos.getValueAt(fila, 7).toString();
                        Pagos pagos = new Pagos();
                        pagos.txtIdCliente.setText(idCliente);
                        pagos.txtNombre.setText(nombre);
                        pagos.fechavencimiento.setText(fecha);
                        pagos.txtComentarios.setText(nombre);
                        pagos.txtMonto.setText(monto);
                        pagos.setVisible(true);
                        
                        dispose();
                       
                    }

                } catch (Exception p ) {
                   JOptionPane.showMessageDialog(null,"Verificar","Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
        });

       
        popupMenu.add(menuPago);
        jTableDatosVencidos.setComponentPopupMenu(popupMenu);
    }


    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
        Document documento = new Document();
        Paragraph titulo;
        titulo = new Paragraph("Academia de Danza Celeste Perez");

        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/Reporte Vencidos/Reporte_Vencidos.pdf"));
            documento.open();
            titulo.setAlignment(1);
            
            Image image = null;
            try {
                image= Image.getInstance("C:/Sistema/CM_SYSTEM /logo Danzaa.png");
                image.scaleAbsolute(150,150);
                image.setAbsolutePosition(415,705);
            } catch (BadElementException | IOException e) {
            }
           
            documento.add(image);
            
            documento.add(titulo);

            documento.add(new Paragraph("Reporte de vencidos"));

            documento.add(Chunk.NEWLINE);

            PdfPTable tabla = new PdfPTable(5);
            float[] values = new float[5];
            values[0] = 800;
            values[1] = 5200;
            values[2] = 2800;
            values[3] = 2300;
            values[4] = 2800;
            tabla.setWidths(values);
            
            PdfPCell id = new PdfPCell(new Phrase("Id"));
            id.setBackgroundColor(BaseColor.GRAY);
            PdfPCell name = new PdfPCell(new Phrase("Alumno/a"));
            name.setBackgroundColor(BaseColor.GRAY);
            PdfPCell phone = new PdfPCell(new Phrase("Numero de telefono"));
            phone.setBackgroundColor(BaseColor.GRAY);
            PdfPCell expired = new PdfPCell(new Phrase("Fecha de vencimiento"));
            expired.setBackgroundColor(BaseColor.GRAY);
            PdfPCell company = new PdfPCell(new Phrase("Curso"));
            company.setBackgroundColor(BaseColor.GRAY);
            
            tabla.addCell(id);
            tabla.addCell(name);
            tabla.addCell(phone);
            tabla.addCell(expired);
            tabla.addCell(company);

            try {
                PreparedStatement ps = (PreparedStatement) cn.prepareStatement("SELECT * FROM fecha_vencimiento_vista");
                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    do {
                        tabla.addCell(rs.getString(1));
                        tabla.addCell(rs.getString(2));
                        tabla.addCell(rs.getString(5));
                        tabla.addCell(rs.getString(6));
                        tabla.addCell(rs.getString(7));
                    } while (rs.next());
                    documento.add(tabla);
                }
                documento.add(Chunk.NEWLINE);
                documento.add(Chunk.NEWLINE);
                documento.add(Chunk.NEWLINE);
                documento.add(new Paragraph("Fecha: " + fechapdf()));

            } catch (DocumentException | SQLException e) {
                System.out.println("ERROR " + e);
            }
            documento.close();
            JOptionPane.showMessageDialog(null, "REPORTE CREADO");
        } catch (DocumentException | HeadlessException | FileNotFoundException e) {
            System.out.println("ERROR " + e);
        }
    }//GEN-LAST:event_btnPDFActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        String [] titulos = {"ID","Alumno/a","Nombre y Apellido Padre","Nombre y apellido Madre","Telefono","Fecha de Vencimiento","Curso","Monto Cuota"};
        String registros []= new String [50];
        String sql="select * from fecha_vencimiento_vista WHERE alumno LIKE '%"+txtBuscar.getText()+"%'";

        tablemodel = new DefaultTableModel(null,titulos);

        try {
            Statement st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                registros[0]=rs.getString("ID");
                registros[1]=rs.getString("alumno");
                registros[2]=rs.getString("nombre_apellido_padre");
                registros[3]=rs.getString("nombre_apellido_madre");
                registros[4]=rs.getString("numero_telefono");
                registros[5]=rs.getString("fecha_vencimiento");
                registros[6]=rs.getString("curso");
                registros[7]=rs.getString("monto");
                tablemodel.addRow(registros);
            }
            jTableDatosVencidos.setModel(tablemodel);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al buscar: "+e);
        }
    }//GEN-LAST:event_txtBuscarKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInicioClient;
    private javax.swing.JButton btnPDF;
    private javax.swing.JPanel containerbtnInicio;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTableDatosVencidos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    public void mostrardatos() {
        DefaultTableModel modelo = new DefaultTableModel ();
        modelo.addColumn("ID");
        modelo.addColumn("Alumno/a");
        modelo.addColumn("Nombre y Apellido Padre");
        modelo.addColumn("Nombre y Apellido Madre");
        modelo.addColumn("Telefono");
        modelo.addColumn("Fecha de Vencimiento");
        modelo.addColumn("Curso");
        modelo.addColumn("Monto Cuota");
        jTableDatosVencidos.setModel(modelo);
        String consultasql = "select * from fecha_vencimiento_vista";
        String data[]=new String [8];
        
        Statement st;
        try {
         st=(Statement) cn.createStatement();
         ResultSet rs=st.executeQuery(consultasql);
            while (rs.next()) {                
                data[0]=rs.getString(1);
                data[1]=rs.getString(2);
                data[2]=rs.getString(3);
                data[3]=rs.getString(4);
                data[4]=rs.getString(5);
                data[5]=rs.getString(6);
                data[6]=rs.getString(7);
                data[7]=rs.getString(8);
                modelo.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "ERROR: "+e.getMessage());
            
        }
    }

    private String fechapdf() {
        Date fecha = new Date();
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");
        return formatofecha.format(fecha);
    }

}
